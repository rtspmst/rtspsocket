<?xml version="1.0" encoding="utf-8"?><!--巡航点，设置巡航点弹窗动画 进场动画-->
<set xmlns:android="http://schemas.android.com/apk/res/android"
    android:interpolator="@android:interpolator/accelerate_quint">

<!--    <alpha-->
<!--        android:duration="200"-->
<!--        android:fromAlpha="0.1"-->
<!--        android:interpolator="@android:anim/accelerate_interpolator"-->
<!--        android:toAlpha="1.0" />-->

    <!--    android:fromAlpha="1.0"         #起始透明度，取值范围0.0 至 1.0 ，从完全透明到完全不透明-->
    <!--    android:toAlpha="0.1"           #结束透明度，取值范围同上-->
    <!--    android:duration="700"             #动画持续时间，毫秒为单位-->
    <!--    android:fillAfter="true"           #动画结束后，保持结束时的状态-->
    <!--    android:fillBefore="true"          #动画结束后，恢复为初始状态-->
    <!--    android:fillEnabled="true"         #效果同上-->
    <!--    android:repeatCount="5"            #重复次数,取值为-1时无限重复，默认动画执行一次-->
    <!--    android:repeatMode ="reverse"      #重复模式，有reverse和restart两个值，前者为倒序回放，后者为重新开始-->
    <!--    android::interpolator="@android:anim/accelerate_decelerate_interpolator" #插值器，后面单独讲-->

    <!-- ========================================================================================================================= -->

    <scale
        android:duration="300"
        android:fromXScale="0"
        android:fromYScale="1"
        android:pivotX="0%"
        android:pivotY="0%"
        android:toXScale="1"
        android:toYScale="1" />

    <!--    android:fromXScale="0.0"           #起始x尺寸比例-->
    <!--    android:toXScale="1.4"             #最终x尺寸比例-->
    <!--    android:fromYScale="0.0"           #起始y尺寸比例-->
    <!--    android:toYScale="1.4"             #最终y尺寸比例-->
    <!--    android:pivotX="50%"               #缩放起点x轴坐标，取值可以是数值（50）、百分数（50%）、百-->
    <!--    分数p（50%p），当取值为数值时，缩放起点为View左上角坐标-->
    <!--    加具体数值像素，当取值为百分数时，表示在当前View左上角坐-->
    <!--    加上View宽度的具体百分比，当取值为百分数p时，表示在View-->
    <!--    左上角坐标加上父控件宽度的具体百分比-->
    <!--    android:pivotY="50%"               #同上-->
    <!--    android:duration="700"             #动画持续时间，毫秒为单位-->
    <!--    android:fillAfter="true"           #动画结束后，保持结束时的状态-->
    <!--    android:fillBefore="true"          #动画结束后，恢复为初始状态-->
    <!--    android:fillEnabled="true"         #效果同上-->
    <!--    android:repeatCount="5"            #重复次数,取值为-1时无限重复，默认动画执行一次-->
    <!--    android:repeatMode ="reverse"      #重复模式，有reverse和restart两个值，前者为倒序回放，后者为重新开始-->
    <!--    android::interpolator="@android:anim/accelerate_decelerate_interpolator" #插值器，后面单独讲-->

    <!-- ========================================================================================================================= -->

<!--        <translate-->
<!--            android:duration="400"-->
<!--            android:fromXDelta="100%p"-->
<!--            android:interpolator="@android:anim/decelerate_interpolator"-->
<!--            android:toXDelta="0%p" />-->

    <!--    @android:anim/accelerate_interpolator： 越来越快-->
    <!--    @android:anim/decelerate_interpolator：越来越慢-->
    <!--    @android:anim/accelerate_decelerate_interpolator：先快后慢-->
    <!--    @android:anim/anticipate_interpolator: 先后退一小步然后向前加速-->
    <!--    @android:anim/overshoot_interpolator：快速到达终点超出一小步然后回到终点-->
    <!--    @android:anim/anticipate_overshoot_interpolator：到达终点超出一小步然后回到终点-->
    <!--    @android:anim/bounce_interpolator：到达终点产生弹球效果，弹几下回到终点-->
    <!--    @android:anim/linear_interpolator：均匀速度。-->

    <!--    android:duration: 动画运行时间，定义在多次时间（ms）内完成动画-->
    <!--    android:startOffset: 延迟一定时间后运行动画-->
    <!--    fromXDelta: X轴方向开始位置，可以是%，也可以是具体的像素 具体见图-->
    <!--    toXDelta:   X轴方向结束位置，可以是%，也可以是具体的像素-->
    <!--    fromYDelta: Y轴方向开始位置，可以是%，也可以是具体的像素-->
    <!--    toYDelta:    Y轴方向结束位置，可以是%，也可以是具体的像素-->

<!--    <rotate-->
<!--        android:fromDegrees="0"-->
<!--        android:toDegrees="360"-->
<!--        android:pivotX="100%"-->
<!--        android:pivotY="100%"-->
<!--        android:duration="3000"-->
<!--        android:repeatCount="5">-->
<!--    </rotate>-->

<!--    android:fromDegrees 起始的角度度数-->
<!--    android:toDegrees 结束的角度度数，负数表示逆时针，正数表示顺时针。如10圈则比android:fromDegrees大3600即可-->
<!--    android:pivotX 旋转中心的X坐标-->
<!--    浮点数或是百分比。浮点数表示相对于Object的左边缘，如5; 百分比表示相对于Object的左边缘，如5%; 另一种百分比表示相对于父容器的左边缘，如5%p; 一般设置为50%表示在Object中心-->
<!--    android:pivotY 旋转中心的Y坐标-->
<!--    浮点数或是百分比。浮点数表示相对于Object的上边缘，如5; 百分比表示相对于Object的上边缘，如5%; 另一种百分比表示相对于父容器的上边缘，如5%p; 一般设置为50%表示在Object中心-->
<!--    android:duration 表示从android:fromDegrees转动到android:toDegrees所花费的时间，单位为毫秒。可以用来计算速度。-->
<!--    android:interpolator表示变化率，但不是运行速度。一个插补属性，可以将动画效果设置为加速，减速，反复，反弹等。默认为开始和结束慢中间快，-->
<!--    android:startOffset 在调用start函数之后等待开始运行的时间，单位为毫秒，若为10，表示10ms后开始运行-->
<!--    android:repeatCount 重复的次数，默认为0，必须是int，可以为-1表示不停止-->
<!--    android:repeatMode 重复的模式，默认为restart，即重头开始重新运行，可以为reverse即从结束开始向前重新运行。在android:repeatCount大于0或为infinite时生效-->
<!--    android:detachWallpaper 表示是否在壁纸上运行-->
<!--    android:zAdjustment 表示被animated的内容在运行时在z轴上的位置，默认为normal。-->
<!--    normal保持内容当前的z轴顺序-->
<!--    top运行时在最顶层显示-->
<!--    bottom运行时在最底层显示-->
<!--    b. 运行速度-->
<!--    运行速度为运行时间(android:duration)除以运行角度差(android:toDegrees-android:fromDegrees)，比如android:duration为1000，android:toDegrees为360，android:fromDegrees为0就表示1秒转1圈。-->
</set>